version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: camino-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: camino_journal
      POSTGRES_USER: camino_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-camino_secure_password_2024}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5433:5432"
    networks:
      - camino-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U camino_user -d camino_journal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: camino-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password_2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - camino-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: camino-app
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://camino_user:${POSTGRES_PASSWORD:-camino_secure_password_2024}@postgres:5432/camino_journal
      
      # NextAuth
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3001}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-super-secret-nextauth-key-min-32-chars}
      
      # External APIs
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      ASSEMBLYAI_API_KEY: ${ASSEMBLYAI_API_KEY}
      STRAVA_CLIENT_ID: ${STRAVA_CLIENT_ID}
      STRAVA_CLIENT_SECRET: ${STRAVA_CLIENT_SECRET}
      GARMIN_CONSUMER_KEY: ${GARMIN_CONSUMER_KEY}
      GARMIN_CONSUMER_SECRET: ${GARMIN_CONSUMER_SECRET}
      
      # Vercel Blob Storage (if using)
      BLOB_READ_WRITE_TOKEN: ${BLOB_READ_WRITE_TOKEN}
      
      # Redis (optional)
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password_2024}@redis:6379
      
      # Application settings
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - camino-network
    volumes:
      # Mount for development (uncomment for dev mode)
      # - .:/app
      # - /app/node_modules
      # Mount for file uploads (if not using Vercel Blob)
      - uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Development database management tool (optional)
  adminer:
    image: adminer:4.8.1
    container_name: camino-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - postgres
    networks:
      - camino-network
    profiles:
      - dev # Only run in development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local

networks:
  camino-network:
    driver: bridge